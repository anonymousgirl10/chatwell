{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"type\"],_excluded2=[\"style\"],_excluded3=[\"parse\",\"childrenProps\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React from'react';import Text from\"react-native-web/dist/exports/Text\";import PropTypes from'prop-types';import TextExtraction from\"./lib/TextExtraction\";import{jsx as _jsx}from\"react/jsx-runtime\";export var PATTERNS={url:/(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.(xn--)?[a-z0-9-]{2,20}\\b([-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+\\]~#?&\\/=])*/i,phone:/[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,email:/\\S+@\\S+\\.\\S+/};var defaultParseShape=PropTypes.shape(_objectSpread(_objectSpread({},Text.propTypes),{},{type:PropTypes.oneOf(Object.keys(PATTERNS)).isRequired,nonExhaustiveMaxMatchCount:PropTypes.number}));var customParseShape=PropTypes.shape(_objectSpread(_objectSpread({},Text.propTypes),{},{pattern:PropTypes.oneOfType([PropTypes.string,PropTypes.instanceOf(RegExp)]).isRequired,nonExhaustiveMaxMatchCount:PropTypes.number}));var ParsedText=function(_React$Component){_inherits(ParsedText,_React$Component);var _super=_createSuper(ParsedText);function ParsedText(){_classCallCheck(this,ParsedText);return _super.apply(this,arguments);}_createClass(ParsedText,[{key:\"setNativeProps\",value:function setNativeProps(nativeProps){this._root.setNativeProps(nativeProps);}},{key:\"getPatterns\",value:function getPatterns(){return this.props.parse.map(function(option){var type=option.type,patternOption=_objectWithoutProperties(option,_excluded);if(type){if(!PATTERNS[type]){throw new Error(`${option.type} is not a supported type`);}patternOption.pattern=PATTERNS[type];}return patternOption;});}},{key:\"getParsedText\",value:function getParsedText(){var _this=this;if(!this.props.parse){return this.props.children;}if(typeof this.props.children!=='string'){return this.props.children;}var textExtraction=new TextExtraction(this.props.children,this.getPatterns());return textExtraction.parse().map(function(props,index){var parentStyle=_this.props.style;var style=props.style,remainder=_objectWithoutProperties(props,_excluded2);return _jsx(Text,_objectSpread(_objectSpread({style:[parentStyle,style]},_this.props.childrenProps),remainder),`parsedText-${index}`);});}},{key:\"render\",value:function render(){var _this2=this;var _this$props=_objectSpread({},this.props),parse=_this$props.parse,childrenProps=_this$props.childrenProps,remainder=_objectWithoutProperties(_this$props,_excluded3);return _jsx(Text,_objectSpread(_objectSpread({ref:function ref(_ref){return _this2._root=_ref;}},remainder),{},{children:this.getParsedText()}));}}]);return ParsedText;}(React.Component);ParsedText.displayName='ParsedText';ParsedText.propTypes=_objectSpread(_objectSpread({},Text.propTypes),{},{parse:PropTypes.arrayOf(PropTypes.oneOfType([defaultParseShape,customParseShape])),childrenProps:PropTypes.shape(Text.propTypes)});ParsedText.defaultProps={parse:null,childrenProps:{}};export default ParsedText;","map":{"version":3,"names":["React","Text","PropTypes","TextExtraction","jsx","_jsx","PATTERNS","url","phone","email","defaultParseShape","shape","_objectSpread","propTypes","type","oneOf","Object","keys","isRequired","nonExhaustiveMaxMatchCount","number","customParseShape","pattern","oneOfType","string","instanceOf","RegExp","ParsedText","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","setNativeProps","nativeProps","_root","getPatterns","props","parse","map","option","patternOption","_objectWithoutProperties","_excluded","Error","getParsedText","_this","children","textExtraction","index","parentStyle","style","remainder","_excluded2","childrenProps","render","_this2","_this$props","_excluded3","ref","Component","displayName","arrayOf","defaultProps"],"sources":["/home/whm/Documents/WHM/app/chatwell/chatwell/node_modules/react-native-parsed-text/src/ParsedText.js"],"sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport TextExtraction from './lib/TextExtraction';\n\n/**\n * This is a list of the known patterns that are provided by this library\n * @typedef {('url'|'phone'|'email')} KnownParsePattern\n */\n/**\n * @type {Object.<string, RegExp>}\n * // The keys really should be KnownParsePattern -- but this is unsupported in jsdoc, sadly\n */\nexport const PATTERNS = {\n  /**\n   * Segments/Features:\n   *  - http/https support https?\n   *  - auto-detecting loose domains if preceded by `www.`\n   *  - Localized & Long top-level domains \\.(xn--)?[a-z0-9-]{2,20}\\b\n   *  - Allowed query parameters & values, it's two blocks of matchers\n   *    ([-a-zA-Z0-9@:%_\\+,.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+~#?&\\/=])*\n   *    - First block is [-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]* -- this matches parameter names & values (including commas, dots, opening & closing brackets)\n   *    - The first block must be followed by a closing block [-a-zA-Z0-9@:%_\\+\\]~#?&\\/=] -- this doesn't match commas, dots, and opening brackets\n   */\n  url: /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.(xn--)?[a-z0-9-]{2,20}\\b([-a-zA-Z0-9@:%_\\+\\[\\],.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+\\]~#?&\\/=])*/i,\n  phone: /[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,\n  email: /\\S+@\\S+\\.\\S+/,\n};\n\n/**\n * This is for built-in-patterns already supported by this library\n * Note: any additional keys/props are permitted, and will be passed along as props to the <Text> component!\n * @typedef {Object} DefaultParseShape\n * @property {KnownParsePattern} [type] key of the known pattern you'd like to configure\n * @property {number} [nonExhaustiveModeMaxMatchCount] Enables \"non-exhaustive mode\", where you can limit how many matches are found. -- Must be a positive integer or Infinity matches are permitted\n * @property {Function} [renderText] arbitrary function to rewrite the matched string into something else\n * @property {Function} [onPress]\n * @property {Function} [onLongPress]\n */\nconst defaultParseShape = PropTypes.shape({\n  ...Text.propTypes,\n  type: PropTypes.oneOf(Object.keys(PATTERNS)).isRequired,\n  nonExhaustiveMaxMatchCount: PropTypes.number,\n});\n\nconst customParseShape = PropTypes.shape({\n  ...Text.propTypes,\n  pattern: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)])\n    .isRequired,\n  nonExhaustiveMaxMatchCount: PropTypes.number,\n});\n\n/**\n * The props added by this component\n * @typedef {DefaultParseShape|import('./lib/TextExtraction').CustomParseShape} ParsedTextAddedProps\n * @property {ParseShape[]} parse\n * @property {import('react-native').TextProps} childrenProps -- the props set on each child Text component\n */\n/** @typedef {ParsedTextAddedProps & import('react-native').TextProps} ParsedTextProps */\n\n/** @type {import('react').ComponentClass<ParsedTextProps>} */\nclass ParsedText extends React.Component {\n  static displayName = 'ParsedText';\n\n  static propTypes = {\n    ...Text.propTypes,\n    parse: PropTypes.arrayOf(\n      PropTypes.oneOfType([defaultParseShape, customParseShape]),\n    ),\n    childrenProps: PropTypes.shape(Text.propTypes),\n  };\n\n  static defaultProps = {\n    parse: null,\n    childrenProps: {},\n  };\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n  /** @returns {import('./lib/TextExtraction').CustomParseShape[]} */\n  getPatterns() {\n    return this.props.parse.map((option) => {\n      const { type, ...patternOption } = option;\n      if (type) {\n        if (!PATTERNS[type]) {\n          throw new Error(`${option.type} is not a supported type`);\n        }\n        patternOption.pattern = PATTERNS[type];\n      }\n\n      return patternOption;\n    });\n  }\n\n  getParsedText() {\n    if (!this.props.parse) {\n      return this.props.children;\n    }\n    if (typeof this.props.children !== 'string') {\n      return this.props.children;\n    }\n\n    const textExtraction = new TextExtraction(\n      this.props.children,\n      this.getPatterns(),\n    );\n\n    return textExtraction.parse().map((props, index) => {\n      const { style: parentStyle } = this.props;\n      const { style, ...remainder } = props;\n      return (\n        <Text\n          key={`parsedText-${index}`}\n          style={[parentStyle, style]}\n          {...this.props.childrenProps}\n          {...remainder}\n        />\n      );\n    });\n  }\n\n  render() {\n    // Discard custom props before passing remainder to Text\n    const { parse, childrenProps, ...remainder } = { ...this.props };\n\n    return (\n      <Text ref={(ref) => (this._root = ref)} {...remainder}>\n        {this.getParsedText()}\n      </Text>\n    );\n  }\n}\n\nexport default ParsedText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}